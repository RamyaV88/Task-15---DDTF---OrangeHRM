{"name": "test_login[Admin-pass5]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff75a5bfe75+79173]\n\tGetHandleVerifier [0x0x7ff75a5bfed0+79264]\n\t(No symbol) [0x0x7ff75a379e5a]\n\t(No symbol) [0x0x7ff75a3d0586]\n\t(No symbol) [0x0x7ff75a3d083c]\n\t(No symbol) [0x0x7ff75a424247]\n\t(No symbol) [0x0x7ff75a3f89af]\n\t(No symbol) [0x0x7ff75a42100d]\n\t(No symbol) [0x0x7ff75a3f8743]\n\t(No symbol) [0x0x7ff75a3c14c1]\n\t(No symbol) [0x0x7ff75a3c2253]\n\tGetHandleVerifier [0x0x7ff75a88a2ad+3004797]\n\tGetHandleVerifier [0x0x7ff75a8846fd+2981325]\n\tGetHandleVerifier [0x0x7ff75a8a3350+3107360]\n\tGetHandleVerifier [0x0x7ff75a5da9fe+188622]\n\tGetHandleVerifier [0x0x7ff75a5e228f+219487]\n\tGetHandleVerifier [0x0x7ff75a5c8dc4+115860]\n\tGetHandleVerifier [0x0x7ff75a5c8f79+116297]\n\tGetHandleVerifier [0x0x7ff75a5af528+11256]\n\tBaseThreadInitThunk [0x0x7ffe5e71259d+29]\n\tRtlUserThreadStart [0x0x7ffe5f94af58+40]", "trace": "self = <tests.test_login.TestLogin object at 0x000002164FE74170>, username = 'Admin', password = 'pass5'\n\n    @pytest.mark.parametrize(\"username, password\", get_login_data())\n    def test_login(self, username, password):\n        login_page = LoginPage(self.driver)\n>       login_page.login(username, password)\n\ntests\\test_login.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_page.py:26: in login\n    self.enter_username(username)\npages\\login_page.py:17: in enter_username\n    WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located(self.username_field)).send_keys(username)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"300f46e7dec0a476ed61af0137223a86\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002164FEDE7A0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff75a5bfe75+79173]\nE       \tGetHandleVerifier [0x0x7ff75a5bfed0+79264]\nE       \t(No symbol) [0x0x7ff75a379e5a]\nE       \t(No symbol) [0x0x7ff75a3d0586]\nE       \t(No symbol) [0x0x7ff75a3d083c]\nE       \t(No symbol) [0x0x7ff75a424247]\nE       \t(No symbol) [0x0x7ff75a3f89af]\nE       \t(No symbol) [0x0x7ff75a42100d]\nE       \t(No symbol) [0x0x7ff75a3f8743]\nE       \t(No symbol) [0x0x7ff75a3c14c1]\nE       \t(No symbol) [0x0x7ff75a3c2253]\nE       \tGetHandleVerifier [0x0x7ff75a88a2ad+3004797]\nE       \tGetHandleVerifier [0x0x7ff75a8846fd+2981325]\nE       \tGetHandleVerifier [0x0x7ff75a8a3350+3107360]\nE       \tGetHandleVerifier [0x0x7ff75a5da9fe+188622]\nE       \tGetHandleVerifier [0x0x7ff75a5e228f+219487]\nE       \tGetHandleVerifier [0x0x7ff75a5c8dc4+115860]\nE       \tGetHandleVerifier [0x0x7ff75a5c8f79+116297]\nE       \tGetHandleVerifier [0x0x7ff75a5af528+11256]\nE       \tBaseThreadInitThunk [0x0x7ffe5e71259d+29]\nE       \tRtlUserThreadStart [0x0x7ffe5f94af58+40]\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "parameters": [{"name": "username", "value": "'Admin'"}, {"name": "password", "value": "'pass5'"}], "start": 1749631941326, "stop": 1749631951759, "uuid": "1ade8185-dca6-4a8a-a042-66b427fb152f", "historyId": "8e1d5b84d8e802d0b0204f3dcc840bae", "testCaseId": "2116f0ad00ab1de0effc54f114dd9496", "fullName": "tests.test_login.TestLogin#test_login", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-8HL83QV"}, {"name": "thread", "value": "8960-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}